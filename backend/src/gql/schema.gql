directive @rateLimit(
  max: Int
  window: String
  message: String
  identityArgs: [String]
  arrayLengthField: String
) on FIELD_DEFINITION

directive @auth(requires: PlatformRole = USER) on OBJECT | FIELD_DEFINITION

##################################

enum PlatformRole {
  SUPER_ADMIN
  ADMIN
  USER
}

type Token {
  token: String!
}

type TokenSet {
  token: String!
  refreshToken: String!
}

type User {
  email: String!
  displayName: String!
  avatar: String!
  isEmailVerified: Boolean!
  platformRole: PlatformRole!
}

type Platform {
  isSetupCompleted: Boolean!
}

## Query #########################

type Query {
  hello: String!
  user: User! @auth(requires: USER)
  platform: Platform!
}

## Mutation ######################

type Mutation {
  register(
    captchaToken: String!
    email: String!
    displayName: String!
    password: String!
    setupKey: String
  ): TokenSet! @rateLimit(window: "5s", max: 10, message: "Too many requests")

  login(captchaToken: String!, email: String!, password: String!): TokenSet!
    @rateLimit(window: "5s", max: 10, message: "Too many requests")

  refreshToken(token: String!, refreshToken: String!): Token!
    @rateLimit(window: "5s", max: 10, message: "Too many requests")
}
